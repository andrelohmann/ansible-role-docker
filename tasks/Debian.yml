---
- name: remove distribution packages
  apt:
    name: "{{ packages }}"
    state: absent
    dpkg_options: 'force-confnew,force-confdef'
    autoclean: yes
    autoremove: yes
    update_cache: yes
    cache_valid_time: 3600
  vars:
    packages:
    - docker
    - docker-engine
    - docker.io

- name: install packages
  apt:
    name: "{{ packages }}"
    state: latest
    dpkg_options: 'force-confnew,force-confdef'
    autoclean: yes
    autoremove: yes
    update_cache: yes
    cache_valid_time: 3600
  vars:
    packages:
    - curl
    - python3-pip
    - python3-dev
    - libffi-dev
    - build-essential
    - libssl-dev
    - apt-transport-https
    - ca-certificates
    - software-properties-common

- name: Add Docker key
  apt_key:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    state: present

- name: install docker repo
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    filename: docker-ce

- name: install docker
  apt:
    name: "{{ packages }}"
    state: latest
    dpkg_options: 'force-confnew,force-confdef'
    autoclean: yes
    autoremove: yes
    update_cache: yes
  vars:
    packages:
    - docker-ce
    - docker-ce-cli
    - containerd.io

- name: create all users
  user:
    name: "{{ item }}"
    groups: docker
    append: yes
  with_items: "{{ docker_users }}"

- name: install docker-compose
  pip:
    name: "{{ required_python_packages }}"
    extra_args: --upgrade
    executable: pip3
  vars:
    required_python_packages:
    - docker-compose

...
