---
- name: Apt | Remove distribution packages
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: absent
    dpkg_options: 'force-confnew,force-confdef'
    autoclean: true
    autoremove: true
    update_cache: true
    cache_valid_time: 3600
    purge: true
  vars:
    packages:
    - docker
    - docker-engine
    - docker.io
  notify: Restart conditionally

- name: Apt | Install packages
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
    dpkg_options: 'force-confnew,force-confdef'
    autoclean: true
    autoremove: true
    update_cache: true
    cache_valid_time: 3600
  vars:
    packages:
    - apt-transport-https
    - curl
    - gnupg

- name: Apt | Add docker key
  ansible.builtin.get_url:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    dest: /etc/apt/trusted.gpg.d/docker.asc
    mode: '0644'
    force: true

- name: Apt | Install docker repo
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ [ansible_architecture] | map('extract', docker_deb_architecture) | first }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    filename: docker-ce

- name: Apt | Install docker
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
    dpkg_options: 'force-confnew,force-confdef'
    autoclean: true
    autoremove: true
    update_cache: true
  vars:
    packages:
    - docker-ce
    - docker-ce-cli
    - containerd.io

- name: User | Create all users
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: true
  with_items: "{{ docker_users }}"

- name: Flush the docker restart handlers
  ansible.builtin.meta: flush_handlers

...
